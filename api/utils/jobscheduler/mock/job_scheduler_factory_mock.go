// Code generated by MockGen. DO NOT EDIT.
// Source: ./api/utils/jobscheduler/interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	batchesv1 "github.com/equinor/radix-job-scheduler/api/v1/batches"
	jobs "github.com/equinor/radix-job-scheduler/api/v1/jobs"
	models "github.com/equinor/radix-job-scheduler/models"
	gomock "github.com/golang/mock/gomock"
)

// MockHandlerFactoryInterface is a mock of HandlerFactoryInterface interface.
type MockHandlerFactoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerFactoryInterfaceMockRecorder
}

// MockHandlerFactoryInterfaceMockRecorder is the mock recorder for MockHandlerFactoryInterface.
type MockHandlerFactoryInterfaceMockRecorder struct {
	mock *MockHandlerFactoryInterface
}

// NewMockHandlerFactoryInterface creates a new mock instance.
func NewMockHandlerFactoryInterface(ctrl *gomock.Controller) *MockHandlerFactoryInterface {
	mock := &MockHandlerFactoryInterface{ctrl: ctrl}
	mock.recorder = &MockHandlerFactoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandlerFactoryInterface) EXPECT() *MockHandlerFactoryInterfaceMockRecorder {
	return m.recorder
}

// CreateJobSchedulerBatchHandlerForEnv mocks base method.
func (m *MockHandlerFactoryInterface) CreateJobSchedulerBatchHandlerForEnv(env *models.Env) batchesv1.BatchHandler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateJobSchedulerBatchHandlerForEnv", env)
	ret0, _ := ret[0].(batchesv1.BatchHandler)
	return ret0
}

// CreateJobSchedulerBatchHandlerForEnv indicates an expected call of CreateJobSchedulerBatchHandlerForEnv.
func (mr *MockHandlerFactoryInterfaceMockRecorder) CreateJobSchedulerBatchHandlerForEnv(env interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJobSchedulerBatchHandlerForEnv", reflect.TypeOf((*MockHandlerFactoryInterface)(nil).CreateJobSchedulerBatchHandlerForEnv), env)
}

// CreateJobSchedulerJobHandlerForEnv mocks base method.
func (m *MockHandlerFactoryInterface) CreateJobSchedulerJobHandlerForEnv(env *models.Env) jobs.JobHandler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateJobSchedulerJobHandlerForEnv", env)
	ret0, _ := ret[0].(jobs.JobHandler)
	return ret0
}

// CreateJobSchedulerJobHandlerForEnv indicates an expected call of CreateJobSchedulerJobHandlerForEnv.
func (mr *MockHandlerFactoryInterfaceMockRecorder) CreateJobSchedulerJobHandlerForEnv(env interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJobSchedulerJobHandlerForEnv", reflect.TypeOf((*MockHandlerFactoryInterface)(nil).CreateJobSchedulerJobHandlerForEnv), env)
}
